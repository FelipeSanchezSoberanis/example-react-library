name: Pr checks
on:
  pull_request: null
  workflow_dispatch: null
jobs:
  run_pr_checks:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./library/package-lock.json
      - name: Install dependencies
        working-directory: ./library
        run: |
          npm i
      - name: Run tests
        id: run_tests
        working-directory: ./library
        continue-on-error: true
        run: |
          npm run test
      - name: Check formatting
        id: check_formatting
        working-directory: ./library
        continue-on-error: true
        run: |
          npm run format:check
      - name: Lint
        id: lint
        working-directory: ./library
        continue-on-error: true
        run: |
          npm run lint
      - name: Generate status message and error status
        id: generate_status
        run: |
          SUCCESS_ICON="✅"
          ERROR_ICON="❌"
          JEST_SUCCESS_MESSAGE="${SUCCESS_ICON} All tests passed"
          JEST_ERROR_MESSAGE="${ERROR_ICON} Some tests have failed, run \\\`npm run test\\\` to see failing tests"
          PRETTIER_SUCCESS_MESSAGE="${SUCCESS_ICON} All files correctly formatted"
          PRETTIER_ERROR_MESSAGE="${ERROR_ICON} Some files have formatting errors, run \\\`npm run format:check\\\` to see formatting errors"
          ESLINT_SUCCESS_MESSAGE="${SUCCESS_ICON} All files obey eslint rules"
          ESLINT_ERROR_MESSAGE="${ERROR_ICON} Some files dont obey eslint rules, run \\\`npm run lint\\\` to see eslint errors"

          status_message=""
          error="false"

          if [ "${{ steps.run_tests.outcome }}" = "success" ]; then
            status_message="${JEST_SUCCESS_MESSAGE}"
          else
            status_message="${JEST_ERROR_MESSAGE}"
            error="true"
          fi

          if [ "${{ steps.check_formatting.outcome }}" = "success" ]; then
            status_message="${status_message}\n${PRETTIER_SUCCESS_MESSAGE}"
          else
            status_message="${status_message}\n${PRETTIER_ERROR_MESSAGE}"
            error="true"
          fi

          if [ "${{ steps.lint.outcome }}" = "success" ]; then
            status_message="${status_message}\n${ESLINT_SUCCESS_MESSAGE}"
          else
            status_message="${status_message}\n${ESLINT_ERROR_MESSAGE}"
            error="true"
          fi

          echo "status_message=${status_message}" >> "${GITHUB_OUTPUT}"
          echo "error=${error}" >> "${GITHUB_OUTPUT}"
      - name: Comment pr
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "${{ steps.generate_status.outputs.status_message }}"
            })
      - name: Set exit code
        run: |
          if [ "${{ steps.generate_status.outputs.error }}" = "true" ]; then
            exit 1
          else
            exit 0
          fi
